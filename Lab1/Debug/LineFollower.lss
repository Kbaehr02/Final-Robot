
LineFollower.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000084  00800100  00000858  000008ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000858  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000023  00800184  00800184  00000970  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000970  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000009a0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000148  00000000  00000000  000009e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000163c  00000000  00000000  00000b28  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d2a  00000000  00000000  00002164  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b07  00000000  00000000  00002e8e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000274  00000000  00000000  00003998  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000762  00000000  00000000  00003c0c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000077d  00000000  00000000  0000436e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e8  00000000  00000000  00004aeb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	6d c2       	rjmp	.+1242   	; 0x51c <__vector_16>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	33 c0       	rjmp	.+102    	; 0xc8 <__vector_24>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e8 e5       	ldi	r30, 0x58	; 88
  a0:	f8 e0       	ldi	r31, 0x08	; 8
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a4 38       	cpi	r26, 0x84	; 132
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a4 e8       	ldi	r26, 0x84	; 132
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a7 3a       	cpi	r26, 0xA7	; 167
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	c1 d0       	rcall	.+386    	; 0x246 <main>
  c4:	c7 c3       	rjmp	.+1934   	; 0x854 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <__vector_24>:
  c8:	1f 92       	push	r1
  ca:	0f 92       	push	r0
  cc:	0f b6       	in	r0, 0x3f	; 63
  ce:	0f 92       	push	r0
  d0:	11 24       	eor	r1, r1
  d2:	0b b6       	in	r0, 0x3b	; 59
  d4:	0f 92       	push	r0
  d6:	2f 93       	push	r18
  d8:	8f 93       	push	r24
  da:	9f 93       	push	r25
  dc:	af 93       	push	r26
  de:	bf 93       	push	r27
  e0:	ef 93       	push	r30
  e2:	ff 93       	push	r31
  e4:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
  e8:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
  ec:	90 e0       	ldi	r25, 0x00	; 0
  ee:	98 2f       	mov	r25, r24
  f0:	88 27       	eor	r24, r24
  f2:	82 2b       	or	r24, r18
  f4:	ac e7       	ldi	r26, 0x7C	; 124
  f6:	b0 e0       	ldi	r27, 0x00	; 0
  f8:	ec 91       	ld	r30, X
  fa:	e7 70       	andi	r30, 0x07	; 7
  fc:	f0 e0       	ldi	r31, 0x00	; 0
  fe:	ee 0f       	add	r30, r30
 100:	ff 1f       	adc	r31, r31
 102:	ef 56       	subi	r30, 0x6F	; 111
 104:	fe 4f       	sbci	r31, 0xFE	; 254
 106:	91 83       	std	Z+1, r25	; 0x01
 108:	80 83       	st	Z, r24
 10a:	8c 91       	ld	r24, X
 10c:	87 34       	cpi	r24, 0x47	; 71
 10e:	39 f4       	brne	.+14     	; 0x11e <__vector_24+0x56>
 110:	80 e4       	ldi	r24, 0x40	; 64
 112:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
 116:	81 e0       	ldi	r24, 0x01	; 1
 118:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <__data_end>
 11c:	05 c0       	rjmp	.+10     	; 0x128 <__vector_24+0x60>
 11e:	ec e7       	ldi	r30, 0x7C	; 124
 120:	f0 e0       	ldi	r31, 0x00	; 0
 122:	80 81       	ld	r24, Z
 124:	8f 5f       	subi	r24, 0xFF	; 255
 126:	80 83       	st	Z, r24
 128:	ea e7       	ldi	r30, 0x7A	; 122
 12a:	f0 e0       	ldi	r31, 0x00	; 0
 12c:	80 81       	ld	r24, Z
 12e:	80 64       	ori	r24, 0x40	; 64
 130:	80 83       	st	Z, r24
 132:	ff 91       	pop	r31
 134:	ef 91       	pop	r30
 136:	bf 91       	pop	r27
 138:	af 91       	pop	r26
 13a:	9f 91       	pop	r25
 13c:	8f 91       	pop	r24
 13e:	2f 91       	pop	r18
 140:	0f 90       	pop	r0
 142:	0b be       	out	0x3b, r0	; 59
 144:	0f 90       	pop	r0
 146:	0f be       	out	0x3f, r0	; 63
 148:	0f 90       	pop	r0
 14a:	1f 90       	pop	r1
 14c:	18 95       	reti

0000014e <LCDEnableOnOff>:
 14e:	88 b1       	in	r24, 0x08	; 8
 150:	88 60       	ori	r24, 0x08	; 8
 152:	88 b9       	out	0x08, r24	; 8
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 154:	88 eb       	ldi	r24, 0xB8	; 184
 156:	8a 95       	dec	r24
 158:	f1 f7       	brne	.-4      	; 0x156 <LCDEnableOnOff+0x8>
 15a:	00 00       	nop
 15c:	88 b1       	in	r24, 0x08	; 8
 15e:	87 7f       	andi	r24, 0xF7	; 247
 160:	88 b9       	out	0x08, r24	; 8
 162:	08 95       	ret

00000164 <LCDCheckIfBusy>:
 164:	14 b8       	out	0x04, r1	; 4
 166:	8b b1       	in	r24, 0x0b	; 11
 168:	8b 7f       	andi	r24, 0xFB	; 251
 16a:	8b b9       	out	0x0b, r24	; 11
 16c:	8b b1       	in	r24, 0x0b	; 11
 16e:	88 60       	ori	r24, 0x08	; 8
 170:	8b b9       	out	0x0b, r24	; 11
 172:	2f 99       	sbic	0x05, 7	; 5
 174:	fe cf       	rjmp	.-4      	; 0x172 <LCDCheckIfBusy+0xe>
 176:	eb df       	rcall	.-42     	; 0x14e <LCDEnableOnOff>
 178:	8f ef       	ldi	r24, 0xFF	; 255
 17a:	84 b9       	out	0x04, r24	; 4
 17c:	08 95       	ret

0000017e <LCDSendCommand>:
 17e:	cf 93       	push	r28
 180:	c8 2f       	mov	r28, r24
 182:	f0 df       	rcall	.-32     	; 0x164 <LCDCheckIfBusy>
 184:	c5 b9       	out	0x05, r28	; 5
 186:	8b b1       	in	r24, 0x0b	; 11
 188:	83 7f       	andi	r24, 0xF3	; 243
 18a:	8b b9       	out	0x0b, r24	; 11
 18c:	e0 df       	rcall	.-64     	; 0x14e <LCDEnableOnOff>
 18e:	14 b8       	out	0x04, r1	; 4
 190:	15 b8       	out	0x05, r1	; 5
 192:	cf 91       	pop	r28
 194:	08 95       	ret

00000196 <LCDSendCharacter>:
 196:	cf 93       	push	r28
 198:	c8 2f       	mov	r28, r24
 19a:	e4 df       	rcall	.-56     	; 0x164 <LCDCheckIfBusy>
 19c:	c5 b9       	out	0x05, r28	; 5
 19e:	8b b1       	in	r24, 0x0b	; 11
 1a0:	87 7f       	andi	r24, 0xF7	; 247
 1a2:	8b b9       	out	0x0b, r24	; 11
 1a4:	8b b1       	in	r24, 0x0b	; 11
 1a6:	84 60       	ori	r24, 0x04	; 4
 1a8:	8b b9       	out	0x0b, r24	; 11
 1aa:	d1 df       	rcall	.-94     	; 0x14e <LCDEnableOnOff>
 1ac:	14 b8       	out	0x04, r1	; 4
 1ae:	15 b8       	out	0x05, r1	; 5
 1b0:	cf 91       	pop	r28
 1b2:	08 95       	ret

000001b4 <LCDSendString>:
 1b4:	cf 93       	push	r28
 1b6:	df 93       	push	r29
 1b8:	ec 01       	movw	r28, r24
 1ba:	02 c0       	rjmp	.+4      	; 0x1c0 <LCDSendString+0xc>
 1bc:	21 96       	adiw	r28, 0x01	; 1
 1be:	eb df       	rcall	.-42     	; 0x196 <LCDSendCharacter>
 1c0:	88 81       	ld	r24, Y
 1c2:	81 11       	cpse	r24, r1
 1c4:	fb cf       	rjmp	.-10     	; 0x1bc <LCDSendString+0x8>
 1c6:	df 91       	pop	r29
 1c8:	cf 91       	pop	r28
 1ca:	08 95       	ret

000001cc <LCDGoToPosition>:
 1cc:	e6 2f       	mov	r30, r22
 1ce:	f0 e0       	ldi	r31, 0x00	; 0
 1d0:	e1 50       	subi	r30, 0x01	; 1
 1d2:	ff 4f       	sbci	r31, 0xFF	; 255
 1d4:	20 81       	ld	r18, Z
 1d6:	30 e0       	ldi	r19, 0x00	; 0
 1d8:	20 58       	subi	r18, 0x80	; 128
 1da:	3f 4f       	sbci	r19, 0xFF	; 255
 1dc:	90 e0       	ldi	r25, 0x00	; 0
 1de:	01 97       	sbiw	r24, 0x01	; 1
 1e0:	82 0f       	add	r24, r18
 1e2:	cd cf       	rjmp	.-102    	; 0x17e <LCDSendCommand>
 1e4:	08 95       	ret

000001e6 <LCD_init>:
 1e6:	8a b1       	in	r24, 0x0a	; 10
 1e8:	8c 60       	ori	r24, 0x0C	; 12
 1ea:	8a b9       	out	0x0a, r24	; 10
 1ec:	87 b1       	in	r24, 0x07	; 7
 1ee:	88 60       	ori	r24, 0x08	; 8
 1f0:	87 b9       	out	0x07, r24	; 7
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1f2:	8f ef       	ldi	r24, 0xFF	; 255
 1f4:	91 ea       	ldi	r25, 0xA1	; 161
 1f6:	01 97       	sbiw	r24, 0x01	; 1
 1f8:	f1 f7       	brne	.-4      	; 0x1f6 <LCD_init+0x10>
 1fa:	00 c0       	rjmp	.+0      	; 0x1fc <LCD_init+0x16>
 1fc:	00 00       	nop
 1fe:	81 e0       	ldi	r24, 0x01	; 1
 200:	be df       	rcall	.-132    	; 0x17e <LCDSendCommand>
 202:	89 e9       	ldi	r24, 0x99	; 153
 204:	95 e1       	ldi	r25, 0x15	; 21
 206:	01 97       	sbiw	r24, 0x01	; 1
 208:	f1 f7       	brne	.-4      	; 0x206 <LCD_init+0x20>
 20a:	00 c0       	rjmp	.+0      	; 0x20c <LCD_init+0x26>
 20c:	88 e3       	ldi	r24, 0x38	; 56
 20e:	b7 df       	rcall	.-146    	; 0x17e <LCDSendCommand>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 210:	98 eb       	ldi	r25, 0xB8	; 184
 212:	9a 95       	dec	r25
 214:	f1 f7       	brne	.-4      	; 0x212 <LCD_init+0x2c>
 216:	00 00       	nop
 218:	8c e0       	ldi	r24, 0x0C	; 12
 21a:	b1 df       	rcall	.-158    	; 0x17e <LCDSendCommand>
 21c:	88 eb       	ldi	r24, 0xB8	; 184
 21e:	8a 95       	dec	r24
 220:	f1 f7       	brne	.-4      	; 0x21e <LCD_init+0x38>
 222:	00 00       	nop
 224:	81 e0       	ldi	r24, 0x01	; 1
 226:	ab df       	rcall	.-170    	; 0x17e <LCDSendCommand>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 228:	8f ef       	ldi	r24, 0xFF	; 255
 22a:	9b e6       	ldi	r25, 0x6B	; 107
 22c:	01 97       	sbiw	r24, 0x01	; 1
 22e:	f1 f7       	brne	.-4      	; 0x22c <LCD_init+0x46>
 230:	00 c0       	rjmp	.+0      	; 0x232 <LCD_init+0x4c>
 232:	00 00       	nop
 234:	08 95       	ret

00000236 <LCDClearScreen>:
 236:	81 e0       	ldi	r24, 0x01	; 1
 238:	a2 df       	rcall	.-188    	; 0x17e <LCDSendCommand>
 23a:	89 e9       	ldi	r24, 0x99	; 153
 23c:	95 e1       	ldi	r25, 0x15	; 21
 23e:	01 97       	sbiw	r24, 0x01	; 1
 240:	f1 f7       	brne	.-4      	; 0x23e <LCDClearScreen+0x8>
 242:	00 c0       	rjmp	.+0      	; 0x244 <LCDClearScreen+0xe>
 244:	08 95       	ret

00000246 <main>:
uint8_t forwardDir = 0;
uint8_t reverseDir = 1;

int main(void)
{
	DDRC |= 1 << PORTC2; //Set PortC2 to output
 246:	87 b1       	in	r24, 0x07	; 7
 248:	84 60       	ori	r24, 0x04	; 4
 24a:	87 b9       	out	0x07, r24	; 7
	char mode; //Character sent by VS using Serial
		
	LCD_init();
 24c:	cc df       	rcall	.-104    	; 0x1e6 <LCD_init>
	USART_vInit();
 24e:	4d d1       	rcall	.+666    	; 0x4ea <USART_vInit>
	HBridgeInit();
 250:	9f d0       	rcall	.+318    	; 0x390 <HBridgeInit>
 252:	78 94       	sei
	
	sei(); //Enable interrupts
	
	LCDGoToPosition(1,1);
 254:	61 e0       	ldi	r22, 0x01	; 1
 256:	81 e0       	ldi	r24, 0x01	; 1
 258:	b9 df       	rcall	.-142    	; 0x1cc <LCDGoToPosition>
	LCDSendString("Good morning");
 25a:	83 e1       	ldi	r24, 0x13	; 19
 25c:	91 e0       	ldi	r25, 0x01	; 1
 25e:	aa df       	rcall	.-172    	; 0x1b4 <LCDSendString>
	
	while(1)
	{
		
		mode = USART_vReceiveByte(); //set mode to received byte
 260:	56 d1       	rcall	.+684    	; 0x50e <USART_vReceiveByte>
 262:	ec 01       	movw	r28, r24
		
		LCDGoToPosition(1,3);
 264:	63 e0       	ldi	r22, 0x03	; 3
 266:	81 e0       	ldi	r24, 0x01	; 1
 268:	b1 df       	rcall	.-158    	; 0x1cc <LCDGoToPosition>
 26a:	dd 27       	eor	r29, r29
 26c:	ce 01       	movw	r24, r28
		LCDSendString(mode);
 26e:	a2 df       	rcall	.-188    	; 0x1b4 <LCDSendString>
 270:	c0 35       	cpi	r28, 0x50	; 80
 272:	d1 05       	cpc	r29, r1
			HBridgeCommand(rightMotor, 100, forwardDir);
			LCDGoToPosition(1,2);
			LCDSendString("Going straight");
			PORTC ^= 1 << PINC2;			
		}*/
		switch(mode)
 274:	09 f4       	brne	.+2      	; 0x278 <main+0x32>
 276:	78 c0       	rjmp	.+240    	; 0x368 <main+0x122>
 278:	44 f4       	brge	.+16     	; 0x28a <main+0x44>
 27a:	cb 34       	cpi	r28, 0x4B	; 75
 27c:	d1 05       	cpc	r29, r1
 27e:	09 f4       	brne	.+2      	; 0x282 <main+0x3c>
 280:	37 c0       	rjmp	.+110    	; 0x2f0 <main+0xaa>
 282:	cc 34       	cpi	r28, 0x4C	; 76
 284:	d1 05       	cpc	r29, r1
 286:	01 f1       	breq	.+64     	; 0x2c8 <main+0x82>
 288:	eb cf       	rjmp	.-42     	; 0x260 <main+0x1a>
 28a:	c3 35       	cpi	r28, 0x53	; 83
 28c:	d1 05       	cpc	r29, r1
 28e:	41 f0       	breq	.+16     	; 0x2a0 <main+0x5a>
 290:	c4 35       	cpi	r28, 0x54	; 84
 292:	d1 05       	cpc	r29, r1
 294:	09 f4       	brne	.+2      	; 0x298 <main+0x52>
 296:	54 c0       	rjmp	.+168    	; 0x340 <main+0xfa>
 298:	c2 35       	cpi	r28, 0x52	; 82
 29a:	d1 05       	cpc	r29, r1
 29c:	09 f7       	brne	.-62     	; 0x260 <main+0x1a>
 29e:	3c c0       	rjmp	.+120    	; 0x318 <main+0xd2>
		{
			case 'S':
			{
				LCDClearScreen();
 2a0:	ca df       	rcall	.-108    	; 0x236 <LCDClearScreen>
 2a2:	40 91 85 01 	lds	r20, 0x0185	; 0x800185 <forwardDir>
				HBridgeCommand(leftMotor, 100, forwardDir);
 2a6:	64 e6       	ldi	r22, 0x64	; 100
 2a8:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <leftMotor>
 2ac:	90 d0       	rcall	.+288    	; 0x3ce <HBridgeCommand>
				HBridgeCommand(rightMotor, 100, forwardDir);
 2ae:	40 91 85 01 	lds	r20, 0x0185	; 0x800185 <forwardDir>
 2b2:	64 e6       	ldi	r22, 0x64	; 100
 2b4:	80 91 86 01 	lds	r24, 0x0186	; 0x800186 <rightMotor>
				LCDGoToPosition(1,1);
 2b8:	8a d0       	rcall	.+276    	; 0x3ce <HBridgeCommand>
 2ba:	61 e0       	ldi	r22, 0x01	; 1
 2bc:	81 e0       	ldi	r24, 0x01	; 1
				LCDSendString("Going straight");
 2be:	86 df       	rcall	.-244    	; 0x1cc <LCDGoToPosition>
 2c0:	80 e2       	ldi	r24, 0x20	; 32
 2c2:	91 e0       	ldi	r25, 0x01	; 1
 2c4:	77 df       	rcall	.-274    	; 0x1b4 <LCDSendString>
				break;
				//PORTC ^= 1 << PINC2;
			}
			case 'L':
			{	
				LCDClearScreen();
 2c6:	cc cf       	rjmp	.-104    	; 0x260 <main+0x1a>
 2c8:	b6 df       	rcall	.-148    	; 0x236 <LCDClearScreen>
				HBridgeCommand(leftMotor, 20, forwardDir);
 2ca:	40 91 85 01 	lds	r20, 0x0185	; 0x800185 <forwardDir>
 2ce:	64 e1       	ldi	r22, 0x14	; 20
 2d0:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <leftMotor>
				HBridgeCommand(rightMotor, 80, forwardDir);
 2d4:	7c d0       	rcall	.+248    	; 0x3ce <HBridgeCommand>
 2d6:	40 91 85 01 	lds	r20, 0x0185	; 0x800185 <forwardDir>
 2da:	60 e5       	ldi	r22, 0x50	; 80
 2dc:	80 91 86 01 	lds	r24, 0x0186	; 0x800186 <rightMotor>
				LCDGoToPosition(1,1);
 2e0:	76 d0       	rcall	.+236    	; 0x3ce <HBridgeCommand>
 2e2:	61 e0       	ldi	r22, 0x01	; 1
 2e4:	81 e0       	ldi	r24, 0x01	; 1
				LCDSendString("Turning left NOW"); 
 2e6:	72 df       	rcall	.-284    	; 0x1cc <LCDGoToPosition>
 2e8:	8f e2       	ldi	r24, 0x2F	; 47
 2ea:	91 e0       	ldi	r25, 0x01	; 1
				break;
 2ec:	63 df       	rcall	.-314    	; 0x1b4 <LCDSendString>
				//_delay_ms(100);
				//PORTC ^= 1 << PINC2;
			}
			case 'K':
			{
				LCDClearScreen();
 2ee:	b8 cf       	rjmp	.-144    	; 0x260 <main+0x1a>
				HBridgeCommand(leftMotor, 30, forwardDir);
 2f0:	a2 df       	rcall	.-188    	; 0x236 <LCDClearScreen>
 2f2:	40 91 85 01 	lds	r20, 0x0185	; 0x800185 <forwardDir>
 2f6:	6e e1       	ldi	r22, 0x1E	; 30
 2f8:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <leftMotor>
				HBridgeCommand(rightMotor, 85, forwardDir);
 2fc:	68 d0       	rcall	.+208    	; 0x3ce <HBridgeCommand>
 2fe:	40 91 85 01 	lds	r20, 0x0185	; 0x800185 <forwardDir>
 302:	65 e5       	ldi	r22, 0x55	; 85
 304:	80 91 86 01 	lds	r24, 0x0186	; 0x800186 <rightMotor>
				LCDGoToPosition(1,1);
 308:	62 d0       	rcall	.+196    	; 0x3ce <HBridgeCommand>
 30a:	61 e0       	ldi	r22, 0x01	; 1
 30c:	81 e0       	ldi	r24, 0x01	; 1
				LCDSendString("Turning left SLOW");
 30e:	5e df       	rcall	.-324    	; 0x1cc <LCDGoToPosition>
 310:	80 e4       	ldi	r24, 0x40	; 64
				break;
 312:	91 e0       	ldi	r25, 0x01	; 1
				//_delay_ms(100);
				//PORTC ^= 1 << PINC2;
			}
			case 'R':
			{
				LCDClearScreen();
 314:	4f df       	rcall	.-354    	; 0x1b4 <LCDSendString>
 316:	a4 cf       	rjmp	.-184    	; 0x260 <main+0x1a>
				HBridgeCommand(leftMotor, 80, forwardDir);
 318:	8e df       	rcall	.-228    	; 0x236 <LCDClearScreen>
 31a:	40 91 85 01 	lds	r20, 0x0185	; 0x800185 <forwardDir>
 31e:	60 e5       	ldi	r22, 0x50	; 80
 320:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <leftMotor>
				HBridgeCommand(rightMotor, 20, forwardDir);
 324:	54 d0       	rcall	.+168    	; 0x3ce <HBridgeCommand>
 326:	40 91 85 01 	lds	r20, 0x0185	; 0x800185 <forwardDir>
 32a:	64 e1       	ldi	r22, 0x14	; 20
 32c:	80 91 86 01 	lds	r24, 0x0186	; 0x800186 <rightMotor>
				LCDGoToPosition(1,1);
 330:	4e d0       	rcall	.+156    	; 0x3ce <HBridgeCommand>
 332:	61 e0       	ldi	r22, 0x01	; 1
				LCDSendString("Turning right NOW");
 334:	81 e0       	ldi	r24, 0x01	; 1
 336:	4a df       	rcall	.-364    	; 0x1cc <LCDGoToPosition>
 338:	82 e5       	ldi	r24, 0x52	; 82
				break;
 33a:	91 e0       	ldi	r25, 0x01	; 1
				PORTC ^= 1 << PINC2;
				*/
			}
			case 'T':
			{
				LCDClearScreen();
 33c:	3b df       	rcall	.-394    	; 0x1b4 <LCDSendString>
 33e:	90 cf       	rjmp	.-224    	; 0x260 <main+0x1a>
				HBridgeCommand(leftMotor, 85, forwardDir);
 340:	7a df       	rcall	.-268    	; 0x236 <LCDClearScreen>
 342:	40 91 85 01 	lds	r20, 0x0185	; 0x800185 <forwardDir>
 346:	65 e5       	ldi	r22, 0x55	; 85
 348:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <leftMotor>
				HBridgeCommand(rightMotor, 30, forwardDir);
 34c:	40 d0       	rcall	.+128    	; 0x3ce <HBridgeCommand>
 34e:	40 91 85 01 	lds	r20, 0x0185	; 0x800185 <forwardDir>
 352:	6e e1       	ldi	r22, 0x1E	; 30
 354:	80 91 86 01 	lds	r24, 0x0186	; 0x800186 <rightMotor>
				LCDGoToPosition(1,1);
 358:	3a d0       	rcall	.+116    	; 0x3ce <HBridgeCommand>
 35a:	61 e0       	ldi	r22, 0x01	; 1
 35c:	81 e0       	ldi	r24, 0x01	; 1
				LCDSendString("Turning right SLOW");
 35e:	36 df       	rcall	.-404    	; 0x1cc <LCDGoToPosition>
 360:	84 e6       	ldi	r24, 0x64	; 100
 362:	91 e0       	ldi	r25, 0x01	; 1
 364:	27 df       	rcall	.-434    	; 0x1b4 <LCDSendString>
				break;
 366:	7c cf       	rjmp	.-264    	; 0x260 <main+0x1a>
				PORTC ^= 1 << PINC2;
				*/
			}
			case 'P':
			{
				LCDClearScreen();
 368:	66 df       	rcall	.-308    	; 0x236 <LCDClearScreen>
 36a:	40 91 85 01 	lds	r20, 0x0185	; 0x800185 <forwardDir>
				HBridgeCommand(leftMotor, 0, forwardDir);
 36e:	60 e0       	ldi	r22, 0x00	; 0
 370:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <leftMotor>
 374:	2c d0       	rcall	.+88     	; 0x3ce <HBridgeCommand>
 376:	40 91 85 01 	lds	r20, 0x0185	; 0x800185 <forwardDir>
				HBridgeCommand(rightMotor, 0, forwardDir);
 37a:	60 e0       	ldi	r22, 0x00	; 0
 37c:	80 91 86 01 	lds	r24, 0x0186	; 0x800186 <rightMotor>
 380:	26 d0       	rcall	.+76     	; 0x3ce <HBridgeCommand>
 382:	61 e0       	ldi	r22, 0x01	; 1
 384:	81 e0       	ldi	r24, 0x01	; 1
 386:	22 df       	rcall	.-444    	; 0x1cc <LCDGoToPosition>
				LCDGoToPosition(1,1);
 388:	87 e7       	ldi	r24, 0x77	; 119
 38a:	91 e0       	ldi	r25, 0x01	; 1
 38c:	13 df       	rcall	.-474    	; 0x1b4 <LCDSendString>
 38e:	68 cf       	rjmp	.-304    	; 0x260 <main+0x1a>

00000390 <HBridgeInit>:
 390:	87 b1       	in	r24, 0x07	; 7
 392:	80 6f       	ori	r24, 0xF0	; 240
 394:	87 b9       	out	0x07, r24	; 7
 396:	8a b1       	in	r24, 0x0a	; 10
 398:	80 63       	ori	r24, 0x30	; 48
 39a:	8a b9       	out	0x0a, r24	; 10
 39c:	e0 e8       	ldi	r30, 0x80	; 128
 39e:	f0 e0       	ldi	r31, 0x00	; 0
 3a0:	80 81       	ld	r24, Z
 3a2:	82 6a       	ori	r24, 0xA2	; 162
 3a4:	80 83       	st	Z, r24
 3a6:	e1 e8       	ldi	r30, 0x81	; 129
 3a8:	f0 e0       	ldi	r31, 0x00	; 0
 3aa:	80 81       	ld	r24, Z
 3ac:	8a 61       	ori	r24, 0x1A	; 26
 3ae:	80 83       	st	Z, r24
 3b0:	80 ea       	ldi	r24, 0xA0	; 160
 3b2:	9f e0       	ldi	r25, 0x0F	; 15
 3b4:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
 3b8:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
 3bc:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 3c0:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 3c4:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
 3c8:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
 3cc:	08 95       	ret

000003ce <HBridgeCommand>:
 3ce:	cf 92       	push	r12
 3d0:	df 92       	push	r13
 3d2:	ef 92       	push	r14
 3d4:	ff 92       	push	r15
 3d6:	0f 93       	push	r16
 3d8:	1f 93       	push	r17
 3da:	cf 93       	push	r28
 3dc:	c4 2f       	mov	r28, r20
 3de:	81 11       	cpse	r24, r1
 3e0:	37 c0       	rjmp	.+110    	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 3e2:	66 23       	and	r22, r22
 3e4:	f9 f0       	breq	.+62     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 3e6:	8a b1       	in	r24, 0x0a	; 10
 3e8:	80 62       	ori	r24, 0x20	; 32
 3ea:	8a b9       	out	0x0a, r24	; 10
 3ec:	70 e0       	ldi	r23, 0x00	; 0
 3ee:	80 e0       	ldi	r24, 0x00	; 0
 3f0:	90 e0       	ldi	r25, 0x00	; 0
 3f2:	3f d1       	rcall	.+638    	; 0x672 <__floatunsisf>
 3f4:	00 91 86 00 	lds	r16, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
 3f8:	10 91 87 00 	lds	r17, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
 3fc:	20 e0       	ldi	r18, 0x00	; 0
 3fe:	30 e0       	ldi	r19, 0x00	; 0
 400:	48 ec       	ldi	r20, 0xC8	; 200
 402:	52 e4       	ldi	r21, 0x42	; 66
 404:	a2 d0       	rcall	.+324    	; 0x54a <__divsf3>
 406:	6b 01       	movw	r12, r22
 408:	7c 01       	movw	r14, r24
 40a:	b8 01       	movw	r22, r16
 40c:	80 e0       	ldi	r24, 0x00	; 0
 40e:	90 e0       	ldi	r25, 0x00	; 0
 410:	30 d1       	rcall	.+608    	; 0x672 <__floatunsisf>
 412:	a7 01       	movw	r20, r14
 414:	96 01       	movw	r18, r12
 416:	bb d1       	rcall	.+886    	; 0x78e <__mulsf3>
 418:	00 d1       	rcall	.+512    	; 0x61a <__fixunssfsi>
 41a:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 41e:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 422:	03 c0       	rjmp	.+6      	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 424:	8a b1       	in	r24, 0x0a	; 10
 426:	8f 7d       	andi	r24, 0xDF	; 223
 428:	8a b9       	out	0x0a, r24	; 10
 42a:	c1 11       	cpse	r28, r1
 42c:	07 c0       	rjmp	.+14     	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
 42e:	88 b1       	in	r24, 0x08	; 8
 430:	80 64       	ori	r24, 0x40	; 64
 432:	88 b9       	out	0x08, r24	; 8
 434:	88 b1       	in	r24, 0x08	; 8
 436:	8f 77       	andi	r24, 0x7F	; 127
 438:	88 b9       	out	0x08, r24	; 8
 43a:	3f c0       	rjmp	.+126    	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
 43c:	c1 30       	cpi	r28, 0x01	; 1
 43e:	09 f0       	breq	.+2      	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 440:	3c c0       	rjmp	.+120    	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
 442:	88 b1       	in	r24, 0x08	; 8
 444:	8f 7b       	andi	r24, 0xBF	; 191
 446:	88 b9       	out	0x08, r24	; 8
 448:	88 b1       	in	r24, 0x08	; 8
 44a:	80 68       	ori	r24, 0x80	; 128
 44c:	88 b9       	out	0x08, r24	; 8
 44e:	35 c0       	rjmp	.+106    	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
 450:	66 23       	and	r22, r22
 452:	f9 f0       	breq	.+62     	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
 454:	8a b1       	in	r24, 0x0a	; 10
 456:	80 61       	ori	r24, 0x10	; 16
 458:	8a b9       	out	0x0a, r24	; 10
 45a:	70 e0       	ldi	r23, 0x00	; 0
 45c:	80 e0       	ldi	r24, 0x00	; 0
 45e:	90 e0       	ldi	r25, 0x00	; 0
 460:	08 d1       	rcall	.+528    	; 0x672 <__floatunsisf>
 462:	00 91 86 00 	lds	r16, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
 466:	10 91 87 00 	lds	r17, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
 46a:	20 e0       	ldi	r18, 0x00	; 0
 46c:	30 e0       	ldi	r19, 0x00	; 0
 46e:	48 ec       	ldi	r20, 0xC8	; 200
 470:	52 e4       	ldi	r21, 0x42	; 66
 472:	6b d0       	rcall	.+214    	; 0x54a <__divsf3>
 474:	6b 01       	movw	r12, r22
 476:	7c 01       	movw	r14, r24
 478:	b8 01       	movw	r22, r16
 47a:	80 e0       	ldi	r24, 0x00	; 0
 47c:	90 e0       	ldi	r25, 0x00	; 0
 47e:	f9 d0       	rcall	.+498    	; 0x672 <__floatunsisf>
 480:	a7 01       	movw	r20, r14
 482:	96 01       	movw	r18, r12
 484:	84 d1       	rcall	.+776    	; 0x78e <__mulsf3>
 486:	c9 d0       	rcall	.+402    	; 0x61a <__fixunssfsi>
 488:	70 93 8b 00 	sts	0x008B, r23	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
 48c:	60 93 8a 00 	sts	0x008A, r22	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
 490:	03 c0       	rjmp	.+6      	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
 492:	8a b1       	in	r24, 0x0a	; 10
 494:	8f 7e       	andi	r24, 0xEF	; 239
 496:	8a b9       	out	0x0a, r24	; 10
 498:	c1 11       	cpse	r28, r1
 49a:	07 c0       	rjmp	.+14     	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
 49c:	88 b1       	in	r24, 0x08	; 8
 49e:	80 61       	ori	r24, 0x10	; 16
 4a0:	88 b9       	out	0x08, r24	; 8
 4a2:	88 b1       	in	r24, 0x08	; 8
 4a4:	8f 7d       	andi	r24, 0xDF	; 223
 4a6:	88 b9       	out	0x08, r24	; 8
 4a8:	08 c0       	rjmp	.+16     	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
 4aa:	c1 30       	cpi	r28, 0x01	; 1
 4ac:	31 f4       	brne	.+12     	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
 4ae:	88 b1       	in	r24, 0x08	; 8
 4b0:	8f 7e       	andi	r24, 0xEF	; 239
 4b2:	88 b9       	out	0x08, r24	; 8
 4b4:	88 b1       	in	r24, 0x08	; 8
 4b6:	80 62       	ori	r24, 0x20	; 32
 4b8:	88 b9       	out	0x08, r24	; 8
 4ba:	cf 91       	pop	r28
 4bc:	1f 91       	pop	r17
 4be:	0f 91       	pop	r16
 4c0:	ff 90       	pop	r15
 4c2:	ef 90       	pop	r14
 4c4:	df 90       	pop	r13
 4c6:	cf 90       	pop	r12
 4c8:	08 95       	ret

000004ca <uart_putchar>:
 4ca:	cf 93       	push	r28
 4cc:	c8 2f       	mov	r28, r24
 4ce:	8a 30       	cpi	r24, 0x0A	; 10
 4d0:	11 f4       	brne	.+4      	; 0x4d6 <uart_putchar+0xc>
 4d2:	8d e0       	ldi	r24, 0x0D	; 13
 4d4:	fa df       	rcall	.-12     	; 0x4ca <uart_putchar>
 4d6:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
 4da:	85 ff       	sbrs	r24, 5
 4dc:	fc cf       	rjmp	.-8      	; 0x4d6 <uart_putchar+0xc>
 4de:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 4e2:	80 e0       	ldi	r24, 0x00	; 0
 4e4:	90 e0       	ldi	r25, 0x00	; 0
 4e6:	cf 91       	pop	r28
 4e8:	08 95       	ret

000004ea <USART_vInit>:
 4ea:	85 e0       	ldi	r24, 0x05	; 5
 4ec:	91 e0       	ldi	r25, 0x01	; 1
 4ee:	90 93 a4 01 	sts	0x01A4, r25	; 0x8001a4 <__iob+0x3>
 4f2:	80 93 a3 01 	sts	0x01A3, r24	; 0x8001a3 <__iob+0x2>
 4f6:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 4fa:	83 e3       	ldi	r24, 0x33	; 51
 4fc:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 500:	88 e1       	ldi	r24, 0x18	; 24
 502:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 506:	8e e0       	ldi	r24, 0x0E	; 14
 508:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 50c:	08 95       	ret

0000050e <USART_vReceiveByte>:
 50e:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
 512:	88 23       	and	r24, r24
 514:	e4 f7       	brge	.-8      	; 0x50e <USART_vReceiveByte>
 516:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 51a:	08 95       	ret

0000051c <__vector_16>:
 51c:	1f 92       	push	r1
 51e:	0f 92       	push	r0
 520:	0f b6       	in	r0, 0x3f	; 63
 522:	0f 92       	push	r0
 524:	11 24       	eor	r1, r1
 526:	8f 93       	push	r24
 528:	9f 93       	push	r25
 52a:	80 91 87 01 	lds	r24, 0x0187	; 0x800187 <tic_toc_count>
 52e:	90 91 88 01 	lds	r25, 0x0188	; 0x800188 <tic_toc_count+0x1>
 532:	01 96       	adiw	r24, 0x01	; 1
 534:	90 93 88 01 	sts	0x0188, r25	; 0x800188 <tic_toc_count+0x1>
 538:	80 93 87 01 	sts	0x0187, r24	; 0x800187 <tic_toc_count>
 53c:	9f 91       	pop	r25
 53e:	8f 91       	pop	r24
 540:	0f 90       	pop	r0
 542:	0f be       	out	0x3f, r0	; 63
 544:	0f 90       	pop	r0
 546:	1f 90       	pop	r1
 548:	18 95       	reti

0000054a <__divsf3>:
 54a:	0c d0       	rcall	.+24     	; 0x564 <__divsf3x>
 54c:	e6 c0       	rjmp	.+460    	; 0x71a <__fp_round>
 54e:	de d0       	rcall	.+444    	; 0x70c <__fp_pscB>
 550:	40 f0       	brcs	.+16     	; 0x562 <__divsf3+0x18>
 552:	d5 d0       	rcall	.+426    	; 0x6fe <__fp_pscA>
 554:	30 f0       	brcs	.+12     	; 0x562 <__divsf3+0x18>
 556:	21 f4       	brne	.+8      	; 0x560 <__divsf3+0x16>
 558:	5f 3f       	cpi	r21, 0xFF	; 255
 55a:	19 f0       	breq	.+6      	; 0x562 <__divsf3+0x18>
 55c:	c7 c0       	rjmp	.+398    	; 0x6ec <__fp_inf>
 55e:	51 11       	cpse	r21, r1
 560:	10 c1       	rjmp	.+544    	; 0x782 <__fp_szero>
 562:	ca c0       	rjmp	.+404    	; 0x6f8 <__fp_nan>

00000564 <__divsf3x>:
 564:	eb d0       	rcall	.+470    	; 0x73c <__fp_split3>
 566:	98 f3       	brcs	.-26     	; 0x54e <__divsf3+0x4>

00000568 <__divsf3_pse>:
 568:	99 23       	and	r25, r25
 56a:	c9 f3       	breq	.-14     	; 0x55e <__divsf3+0x14>
 56c:	55 23       	and	r21, r21
 56e:	b1 f3       	breq	.-20     	; 0x55c <__divsf3+0x12>
 570:	95 1b       	sub	r25, r21
 572:	55 0b       	sbc	r21, r21
 574:	bb 27       	eor	r27, r27
 576:	aa 27       	eor	r26, r26
 578:	62 17       	cp	r22, r18
 57a:	73 07       	cpc	r23, r19
 57c:	84 07       	cpc	r24, r20
 57e:	38 f0       	brcs	.+14     	; 0x58e <__divsf3_pse+0x26>
 580:	9f 5f       	subi	r25, 0xFF	; 255
 582:	5f 4f       	sbci	r21, 0xFF	; 255
 584:	22 0f       	add	r18, r18
 586:	33 1f       	adc	r19, r19
 588:	44 1f       	adc	r20, r20
 58a:	aa 1f       	adc	r26, r26
 58c:	a9 f3       	breq	.-22     	; 0x578 <__divsf3_pse+0x10>
 58e:	33 d0       	rcall	.+102    	; 0x5f6 <__divsf3_pse+0x8e>
 590:	0e 2e       	mov	r0, r30
 592:	3a f0       	brmi	.+14     	; 0x5a2 <__divsf3_pse+0x3a>
 594:	e0 e8       	ldi	r30, 0x80	; 128
 596:	30 d0       	rcall	.+96     	; 0x5f8 <__divsf3_pse+0x90>
 598:	91 50       	subi	r25, 0x01	; 1
 59a:	50 40       	sbci	r21, 0x00	; 0
 59c:	e6 95       	lsr	r30
 59e:	00 1c       	adc	r0, r0
 5a0:	ca f7       	brpl	.-14     	; 0x594 <__divsf3_pse+0x2c>
 5a2:	29 d0       	rcall	.+82     	; 0x5f6 <__divsf3_pse+0x8e>
 5a4:	fe 2f       	mov	r31, r30
 5a6:	27 d0       	rcall	.+78     	; 0x5f6 <__divsf3_pse+0x8e>
 5a8:	66 0f       	add	r22, r22
 5aa:	77 1f       	adc	r23, r23
 5ac:	88 1f       	adc	r24, r24
 5ae:	bb 1f       	adc	r27, r27
 5b0:	26 17       	cp	r18, r22
 5b2:	37 07       	cpc	r19, r23
 5b4:	48 07       	cpc	r20, r24
 5b6:	ab 07       	cpc	r26, r27
 5b8:	b0 e8       	ldi	r27, 0x80	; 128
 5ba:	09 f0       	breq	.+2      	; 0x5be <__divsf3_pse+0x56>
 5bc:	bb 0b       	sbc	r27, r27
 5be:	80 2d       	mov	r24, r0
 5c0:	bf 01       	movw	r22, r30
 5c2:	ff 27       	eor	r31, r31
 5c4:	93 58       	subi	r25, 0x83	; 131
 5c6:	5f 4f       	sbci	r21, 0xFF	; 255
 5c8:	2a f0       	brmi	.+10     	; 0x5d4 <__divsf3_pse+0x6c>
 5ca:	9e 3f       	cpi	r25, 0xFE	; 254
 5cc:	51 05       	cpc	r21, r1
 5ce:	68 f0       	brcs	.+26     	; 0x5ea <__divsf3_pse+0x82>
 5d0:	8d c0       	rjmp	.+282    	; 0x6ec <__fp_inf>
 5d2:	d7 c0       	rjmp	.+430    	; 0x782 <__fp_szero>
 5d4:	5f 3f       	cpi	r21, 0xFF	; 255
 5d6:	ec f3       	brlt	.-6      	; 0x5d2 <__divsf3_pse+0x6a>
 5d8:	98 3e       	cpi	r25, 0xE8	; 232
 5da:	dc f3       	brlt	.-10     	; 0x5d2 <__divsf3_pse+0x6a>
 5dc:	86 95       	lsr	r24
 5de:	77 95       	ror	r23
 5e0:	67 95       	ror	r22
 5e2:	b7 95       	ror	r27
 5e4:	f7 95       	ror	r31
 5e6:	9f 5f       	subi	r25, 0xFF	; 255
 5e8:	c9 f7       	brne	.-14     	; 0x5dc <__divsf3_pse+0x74>
 5ea:	88 0f       	add	r24, r24
 5ec:	91 1d       	adc	r25, r1
 5ee:	96 95       	lsr	r25
 5f0:	87 95       	ror	r24
 5f2:	97 f9       	bld	r25, 7
 5f4:	08 95       	ret
 5f6:	e1 e0       	ldi	r30, 0x01	; 1
 5f8:	66 0f       	add	r22, r22
 5fa:	77 1f       	adc	r23, r23
 5fc:	88 1f       	adc	r24, r24
 5fe:	bb 1f       	adc	r27, r27
 600:	62 17       	cp	r22, r18
 602:	73 07       	cpc	r23, r19
 604:	84 07       	cpc	r24, r20
 606:	ba 07       	cpc	r27, r26
 608:	20 f0       	brcs	.+8      	; 0x612 <__divsf3_pse+0xaa>
 60a:	62 1b       	sub	r22, r18
 60c:	73 0b       	sbc	r23, r19
 60e:	84 0b       	sbc	r24, r20
 610:	ba 0b       	sbc	r27, r26
 612:	ee 1f       	adc	r30, r30
 614:	88 f7       	brcc	.-30     	; 0x5f8 <__divsf3_pse+0x90>
 616:	e0 95       	com	r30
 618:	08 95       	ret

0000061a <__fixunssfsi>:
 61a:	98 d0       	rcall	.+304    	; 0x74c <__fp_splitA>
 61c:	88 f0       	brcs	.+34     	; 0x640 <__fixunssfsi+0x26>
 61e:	9f 57       	subi	r25, 0x7F	; 127
 620:	90 f0       	brcs	.+36     	; 0x646 <__fixunssfsi+0x2c>
 622:	b9 2f       	mov	r27, r25
 624:	99 27       	eor	r25, r25
 626:	b7 51       	subi	r27, 0x17	; 23
 628:	a0 f0       	brcs	.+40     	; 0x652 <__fixunssfsi+0x38>
 62a:	d1 f0       	breq	.+52     	; 0x660 <__fixunssfsi+0x46>
 62c:	66 0f       	add	r22, r22
 62e:	77 1f       	adc	r23, r23
 630:	88 1f       	adc	r24, r24
 632:	99 1f       	adc	r25, r25
 634:	1a f0       	brmi	.+6      	; 0x63c <__fixunssfsi+0x22>
 636:	ba 95       	dec	r27
 638:	c9 f7       	brne	.-14     	; 0x62c <__fixunssfsi+0x12>
 63a:	12 c0       	rjmp	.+36     	; 0x660 <__fixunssfsi+0x46>
 63c:	b1 30       	cpi	r27, 0x01	; 1
 63e:	81 f0       	breq	.+32     	; 0x660 <__fixunssfsi+0x46>
 640:	9f d0       	rcall	.+318    	; 0x780 <__fp_zero>
 642:	b1 e0       	ldi	r27, 0x01	; 1
 644:	08 95       	ret
 646:	9c c0       	rjmp	.+312    	; 0x780 <__fp_zero>
 648:	67 2f       	mov	r22, r23
 64a:	78 2f       	mov	r23, r24
 64c:	88 27       	eor	r24, r24
 64e:	b8 5f       	subi	r27, 0xF8	; 248
 650:	39 f0       	breq	.+14     	; 0x660 <__fixunssfsi+0x46>
 652:	b9 3f       	cpi	r27, 0xF9	; 249
 654:	cc f3       	brlt	.-14     	; 0x648 <__fixunssfsi+0x2e>
 656:	86 95       	lsr	r24
 658:	77 95       	ror	r23
 65a:	67 95       	ror	r22
 65c:	b3 95       	inc	r27
 65e:	d9 f7       	brne	.-10     	; 0x656 <__fixunssfsi+0x3c>
 660:	3e f4       	brtc	.+14     	; 0x670 <__fixunssfsi+0x56>
 662:	90 95       	com	r25
 664:	80 95       	com	r24
 666:	70 95       	com	r23
 668:	61 95       	neg	r22
 66a:	7f 4f       	sbci	r23, 0xFF	; 255
 66c:	8f 4f       	sbci	r24, 0xFF	; 255
 66e:	9f 4f       	sbci	r25, 0xFF	; 255
 670:	08 95       	ret

00000672 <__floatunsisf>:
 672:	e8 94       	clt
 674:	09 c0       	rjmp	.+18     	; 0x688 <__floatsisf+0x12>

00000676 <__floatsisf>:
 676:	97 fb       	bst	r25, 7
 678:	3e f4       	brtc	.+14     	; 0x688 <__floatsisf+0x12>
 67a:	90 95       	com	r25
 67c:	80 95       	com	r24
 67e:	70 95       	com	r23
 680:	61 95       	neg	r22
 682:	7f 4f       	sbci	r23, 0xFF	; 255
 684:	8f 4f       	sbci	r24, 0xFF	; 255
 686:	9f 4f       	sbci	r25, 0xFF	; 255
 688:	99 23       	and	r25, r25
 68a:	a9 f0       	breq	.+42     	; 0x6b6 <__floatsisf+0x40>
 68c:	f9 2f       	mov	r31, r25
 68e:	96 e9       	ldi	r25, 0x96	; 150
 690:	bb 27       	eor	r27, r27
 692:	93 95       	inc	r25
 694:	f6 95       	lsr	r31
 696:	87 95       	ror	r24
 698:	77 95       	ror	r23
 69a:	67 95       	ror	r22
 69c:	b7 95       	ror	r27
 69e:	f1 11       	cpse	r31, r1
 6a0:	f8 cf       	rjmp	.-16     	; 0x692 <__floatsisf+0x1c>
 6a2:	fa f4       	brpl	.+62     	; 0x6e2 <__floatsisf+0x6c>
 6a4:	bb 0f       	add	r27, r27
 6a6:	11 f4       	brne	.+4      	; 0x6ac <__floatsisf+0x36>
 6a8:	60 ff       	sbrs	r22, 0
 6aa:	1b c0       	rjmp	.+54     	; 0x6e2 <__floatsisf+0x6c>
 6ac:	6f 5f       	subi	r22, 0xFF	; 255
 6ae:	7f 4f       	sbci	r23, 0xFF	; 255
 6b0:	8f 4f       	sbci	r24, 0xFF	; 255
 6b2:	9f 4f       	sbci	r25, 0xFF	; 255
 6b4:	16 c0       	rjmp	.+44     	; 0x6e2 <__floatsisf+0x6c>
 6b6:	88 23       	and	r24, r24
 6b8:	11 f0       	breq	.+4      	; 0x6be <__floatsisf+0x48>
 6ba:	96 e9       	ldi	r25, 0x96	; 150
 6bc:	11 c0       	rjmp	.+34     	; 0x6e0 <__floatsisf+0x6a>
 6be:	77 23       	and	r23, r23
 6c0:	21 f0       	breq	.+8      	; 0x6ca <__floatsisf+0x54>
 6c2:	9e e8       	ldi	r25, 0x8E	; 142
 6c4:	87 2f       	mov	r24, r23
 6c6:	76 2f       	mov	r23, r22
 6c8:	05 c0       	rjmp	.+10     	; 0x6d4 <__floatsisf+0x5e>
 6ca:	66 23       	and	r22, r22
 6cc:	71 f0       	breq	.+28     	; 0x6ea <__floatsisf+0x74>
 6ce:	96 e8       	ldi	r25, 0x86	; 134
 6d0:	86 2f       	mov	r24, r22
 6d2:	70 e0       	ldi	r23, 0x00	; 0
 6d4:	60 e0       	ldi	r22, 0x00	; 0
 6d6:	2a f0       	brmi	.+10     	; 0x6e2 <__floatsisf+0x6c>
 6d8:	9a 95       	dec	r25
 6da:	66 0f       	add	r22, r22
 6dc:	77 1f       	adc	r23, r23
 6de:	88 1f       	adc	r24, r24
 6e0:	da f7       	brpl	.-10     	; 0x6d8 <__floatsisf+0x62>
 6e2:	88 0f       	add	r24, r24
 6e4:	96 95       	lsr	r25
 6e6:	87 95       	ror	r24
 6e8:	97 f9       	bld	r25, 7
 6ea:	08 95       	ret

000006ec <__fp_inf>:
 6ec:	97 f9       	bld	r25, 7
 6ee:	9f 67       	ori	r25, 0x7F	; 127
 6f0:	80 e8       	ldi	r24, 0x80	; 128
 6f2:	70 e0       	ldi	r23, 0x00	; 0
 6f4:	60 e0       	ldi	r22, 0x00	; 0
 6f6:	08 95       	ret

000006f8 <__fp_nan>:
 6f8:	9f ef       	ldi	r25, 0xFF	; 255
 6fa:	80 ec       	ldi	r24, 0xC0	; 192
 6fc:	08 95       	ret

000006fe <__fp_pscA>:
 6fe:	00 24       	eor	r0, r0
 700:	0a 94       	dec	r0
 702:	16 16       	cp	r1, r22
 704:	17 06       	cpc	r1, r23
 706:	18 06       	cpc	r1, r24
 708:	09 06       	cpc	r0, r25
 70a:	08 95       	ret

0000070c <__fp_pscB>:
 70c:	00 24       	eor	r0, r0
 70e:	0a 94       	dec	r0
 710:	12 16       	cp	r1, r18
 712:	13 06       	cpc	r1, r19
 714:	14 06       	cpc	r1, r20
 716:	05 06       	cpc	r0, r21
 718:	08 95       	ret

0000071a <__fp_round>:
 71a:	09 2e       	mov	r0, r25
 71c:	03 94       	inc	r0
 71e:	00 0c       	add	r0, r0
 720:	11 f4       	brne	.+4      	; 0x726 <__fp_round+0xc>
 722:	88 23       	and	r24, r24
 724:	52 f0       	brmi	.+20     	; 0x73a <__fp_round+0x20>
 726:	bb 0f       	add	r27, r27
 728:	40 f4       	brcc	.+16     	; 0x73a <__fp_round+0x20>
 72a:	bf 2b       	or	r27, r31
 72c:	11 f4       	brne	.+4      	; 0x732 <__fp_round+0x18>
 72e:	60 ff       	sbrs	r22, 0
 730:	04 c0       	rjmp	.+8      	; 0x73a <__fp_round+0x20>
 732:	6f 5f       	subi	r22, 0xFF	; 255
 734:	7f 4f       	sbci	r23, 0xFF	; 255
 736:	8f 4f       	sbci	r24, 0xFF	; 255
 738:	9f 4f       	sbci	r25, 0xFF	; 255
 73a:	08 95       	ret

0000073c <__fp_split3>:
 73c:	57 fd       	sbrc	r21, 7
 73e:	90 58       	subi	r25, 0x80	; 128
 740:	44 0f       	add	r20, r20
 742:	55 1f       	adc	r21, r21
 744:	59 f0       	breq	.+22     	; 0x75c <__fp_splitA+0x10>
 746:	5f 3f       	cpi	r21, 0xFF	; 255
 748:	71 f0       	breq	.+28     	; 0x766 <__fp_splitA+0x1a>
 74a:	47 95       	ror	r20

0000074c <__fp_splitA>:
 74c:	88 0f       	add	r24, r24
 74e:	97 fb       	bst	r25, 7
 750:	99 1f       	adc	r25, r25
 752:	61 f0       	breq	.+24     	; 0x76c <__fp_splitA+0x20>
 754:	9f 3f       	cpi	r25, 0xFF	; 255
 756:	79 f0       	breq	.+30     	; 0x776 <__fp_splitA+0x2a>
 758:	87 95       	ror	r24
 75a:	08 95       	ret
 75c:	12 16       	cp	r1, r18
 75e:	13 06       	cpc	r1, r19
 760:	14 06       	cpc	r1, r20
 762:	55 1f       	adc	r21, r21
 764:	f2 cf       	rjmp	.-28     	; 0x74a <__fp_split3+0xe>
 766:	46 95       	lsr	r20
 768:	f1 df       	rcall	.-30     	; 0x74c <__fp_splitA>
 76a:	08 c0       	rjmp	.+16     	; 0x77c <__fp_splitA+0x30>
 76c:	16 16       	cp	r1, r22
 76e:	17 06       	cpc	r1, r23
 770:	18 06       	cpc	r1, r24
 772:	99 1f       	adc	r25, r25
 774:	f1 cf       	rjmp	.-30     	; 0x758 <__fp_splitA+0xc>
 776:	86 95       	lsr	r24
 778:	71 05       	cpc	r23, r1
 77a:	61 05       	cpc	r22, r1
 77c:	08 94       	sec
 77e:	08 95       	ret

00000780 <__fp_zero>:
 780:	e8 94       	clt

00000782 <__fp_szero>:
 782:	bb 27       	eor	r27, r27
 784:	66 27       	eor	r22, r22
 786:	77 27       	eor	r23, r23
 788:	cb 01       	movw	r24, r22
 78a:	97 f9       	bld	r25, 7
 78c:	08 95       	ret

0000078e <__mulsf3>:
 78e:	0b d0       	rcall	.+22     	; 0x7a6 <__mulsf3x>
 790:	c4 cf       	rjmp	.-120    	; 0x71a <__fp_round>
 792:	b5 df       	rcall	.-150    	; 0x6fe <__fp_pscA>
 794:	28 f0       	brcs	.+10     	; 0x7a0 <__mulsf3+0x12>
 796:	ba df       	rcall	.-140    	; 0x70c <__fp_pscB>
 798:	18 f0       	brcs	.+6      	; 0x7a0 <__mulsf3+0x12>
 79a:	95 23       	and	r25, r21
 79c:	09 f0       	breq	.+2      	; 0x7a0 <__mulsf3+0x12>
 79e:	a6 cf       	rjmp	.-180    	; 0x6ec <__fp_inf>
 7a0:	ab cf       	rjmp	.-170    	; 0x6f8 <__fp_nan>
 7a2:	11 24       	eor	r1, r1
 7a4:	ee cf       	rjmp	.-36     	; 0x782 <__fp_szero>

000007a6 <__mulsf3x>:
 7a6:	ca df       	rcall	.-108    	; 0x73c <__fp_split3>
 7a8:	a0 f3       	brcs	.-24     	; 0x792 <__mulsf3+0x4>

000007aa <__mulsf3_pse>:
 7aa:	95 9f       	mul	r25, r21
 7ac:	d1 f3       	breq	.-12     	; 0x7a2 <__mulsf3+0x14>
 7ae:	95 0f       	add	r25, r21
 7b0:	50 e0       	ldi	r21, 0x00	; 0
 7b2:	55 1f       	adc	r21, r21
 7b4:	62 9f       	mul	r22, r18
 7b6:	f0 01       	movw	r30, r0
 7b8:	72 9f       	mul	r23, r18
 7ba:	bb 27       	eor	r27, r27
 7bc:	f0 0d       	add	r31, r0
 7be:	b1 1d       	adc	r27, r1
 7c0:	63 9f       	mul	r22, r19
 7c2:	aa 27       	eor	r26, r26
 7c4:	f0 0d       	add	r31, r0
 7c6:	b1 1d       	adc	r27, r1
 7c8:	aa 1f       	adc	r26, r26
 7ca:	64 9f       	mul	r22, r20
 7cc:	66 27       	eor	r22, r22
 7ce:	b0 0d       	add	r27, r0
 7d0:	a1 1d       	adc	r26, r1
 7d2:	66 1f       	adc	r22, r22
 7d4:	82 9f       	mul	r24, r18
 7d6:	22 27       	eor	r18, r18
 7d8:	b0 0d       	add	r27, r0
 7da:	a1 1d       	adc	r26, r1
 7dc:	62 1f       	adc	r22, r18
 7de:	73 9f       	mul	r23, r19
 7e0:	b0 0d       	add	r27, r0
 7e2:	a1 1d       	adc	r26, r1
 7e4:	62 1f       	adc	r22, r18
 7e6:	83 9f       	mul	r24, r19
 7e8:	a0 0d       	add	r26, r0
 7ea:	61 1d       	adc	r22, r1
 7ec:	22 1f       	adc	r18, r18
 7ee:	74 9f       	mul	r23, r20
 7f0:	33 27       	eor	r19, r19
 7f2:	a0 0d       	add	r26, r0
 7f4:	61 1d       	adc	r22, r1
 7f6:	23 1f       	adc	r18, r19
 7f8:	84 9f       	mul	r24, r20
 7fa:	60 0d       	add	r22, r0
 7fc:	21 1d       	adc	r18, r1
 7fe:	82 2f       	mov	r24, r18
 800:	76 2f       	mov	r23, r22
 802:	6a 2f       	mov	r22, r26
 804:	11 24       	eor	r1, r1
 806:	9f 57       	subi	r25, 0x7F	; 127
 808:	50 40       	sbci	r21, 0x00	; 0
 80a:	8a f0       	brmi	.+34     	; 0x82e <__mulsf3_pse+0x84>
 80c:	e1 f0       	breq	.+56     	; 0x846 <__mulsf3_pse+0x9c>
 80e:	88 23       	and	r24, r24
 810:	4a f0       	brmi	.+18     	; 0x824 <__mulsf3_pse+0x7a>
 812:	ee 0f       	add	r30, r30
 814:	ff 1f       	adc	r31, r31
 816:	bb 1f       	adc	r27, r27
 818:	66 1f       	adc	r22, r22
 81a:	77 1f       	adc	r23, r23
 81c:	88 1f       	adc	r24, r24
 81e:	91 50       	subi	r25, 0x01	; 1
 820:	50 40       	sbci	r21, 0x00	; 0
 822:	a9 f7       	brne	.-22     	; 0x80e <__mulsf3_pse+0x64>
 824:	9e 3f       	cpi	r25, 0xFE	; 254
 826:	51 05       	cpc	r21, r1
 828:	70 f0       	brcs	.+28     	; 0x846 <__mulsf3_pse+0x9c>
 82a:	60 cf       	rjmp	.-320    	; 0x6ec <__fp_inf>
 82c:	aa cf       	rjmp	.-172    	; 0x782 <__fp_szero>
 82e:	5f 3f       	cpi	r21, 0xFF	; 255
 830:	ec f3       	brlt	.-6      	; 0x82c <__mulsf3_pse+0x82>
 832:	98 3e       	cpi	r25, 0xE8	; 232
 834:	dc f3       	brlt	.-10     	; 0x82c <__mulsf3_pse+0x82>
 836:	86 95       	lsr	r24
 838:	77 95       	ror	r23
 83a:	67 95       	ror	r22
 83c:	b7 95       	ror	r27
 83e:	f7 95       	ror	r31
 840:	e7 95       	ror	r30
 842:	9f 5f       	subi	r25, 0xFF	; 255
 844:	c1 f7       	brne	.-16     	; 0x836 <__mulsf3_pse+0x8c>
 846:	fe 2b       	or	r31, r30
 848:	88 0f       	add	r24, r24
 84a:	91 1d       	adc	r25, r1
 84c:	96 95       	lsr	r25
 84e:	87 95       	ror	r24
 850:	97 f9       	bld	r25, 7
 852:	08 95       	ret

00000854 <_exit>:
 854:	f8 94       	cli

00000856 <__stop_program>:
 856:	ff cf       	rjmp	.-2      	; 0x856 <__stop_program>
